import { forwardRef, type ComponentProps } from "react";
// import { Transition } from 'react-transition-group';
import { cn } from "./utils";

interface Props extends ComponentProps<"div">{};
interface BurgerProps extends ComponentProps<"div">{
  // animate: boolean;
  // onToggle: () => void;
};

export const TrustIcon = (props: Props) => {
  const classes = cn(props.className, "");

  return (
    <div  {...props} className={classes}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 348 176"

        fill="none"
      >

        <g clipPath="url(#a)">
          <path
            fill="#00B67A"
            d="M65.25 63H0v65h65.25V63ZM135.938 63h-65.25v65h65.25V63ZM206.625 63h-65.25v65h65.25V63ZM277.312 63h-65.25v65h65.25V63ZM348 63h-65.25v65H348V63Z"
          />
          <path
            fill="#fff"
            d="m32.625 106.807 9.923-2.505 4.146 12.729-14.069-10.224Zm22.837-16.453H37.995L32.626 73.97l-5.37 16.385H9.789l14.137 10.156-5.37 16.386 14.138-10.156 8.7-6.23 14.07-10.156ZM103.313 106.807l9.923-2.505 4.146 12.729-14.069-10.224Zm22.837-16.453h-17.468l-5.369-16.385-5.37 16.385H80.475l14.138 10.156-5.37 16.386 14.137-10.156 8.7-6.23 14.07-10.156ZM174 106.807l9.923-2.505 4.147 12.729L174 106.807Zm22.837-16.453H179.37L174 73.97l-5.37 16.385h-17.468L165.3 100.51l-5.37 16.386 14.138-10.156 8.7-6.23 14.069-10.156ZM244.687 106.807l9.924-2.505 4.146 12.729-14.07-10.224Zm22.838-16.453h-17.468l-5.37-16.385-5.369 16.385H221.85l14.137 10.156-5.369 16.386 14.137-10.156 8.7-6.23 14.07-10.156ZM315.375 106.807l9.923-2.505 4.147 12.729-14.07-10.224Zm22.837-16.453h-17.467l-5.37-16.385-5.37 16.385h-17.468l14.138 10.156-5.37 16.386 14.138-10.156 8.7-6.23 14.069-10.156Z"
          />
        </g>
        <g clipPath="url(#b)">
          <path
            fill="#191919"
            d="M54.137 17.721h20.858v3.846h-8.201v21.621h-4.51v-21.62h-8.165V17.72h.018Zm19.967 7.027h3.855v3.559h.073a4.16 4.16 0 0 1 .71-1.456 6.516 6.516 0 0 1 1.254-1.294 6.708 6.708 0 0 1 1.637-.952 5.06 5.06 0 0 1 1.836-.36c.473 0 .819.018 1 .036.182.018.364.054.564.072v3.918a13.32 13.32 0 0 0-.89-.126 7.65 7.65 0 0 0-.892-.054c-.691 0-1.346.144-1.964.414-.618.27-1.146.683-1.6 1.204-.455.539-.819 1.186-1.091 1.977-.273.79-.4 1.69-.4 2.714v8.77h-4.11V24.748h.018Zm29.823 18.44H99.89v-2.57h-.072c-.51.935-1.255 1.672-2.255 2.229-1 .557-2.019.845-3.055.845-2.455 0-4.237-.593-5.329-1.798-1.09-1.204-1.636-3.02-1.636-5.445v-11.7h4.11v11.304c0 1.618.309 2.768.945 3.433.618.665 1.51 1.006 2.637 1.006.873 0 1.582-.125 2.164-.395.582-.27 1.055-.611 1.4-1.06.364-.432.618-.97.782-1.582.164-.611.237-1.276.237-1.995V24.766h4.109v18.422Zm7.002-5.913c.127 1.187.582 2.013 1.364 2.498.8.468 1.745.72 2.855.72.381 0 .818-.037 1.309-.09.491-.054.964-.18 1.382-.342a2.662 2.662 0 0 0 1.073-.737c.273-.323.4-.737.382-1.258-.018-.521-.218-.952-.582-1.276-.364-.341-.818-.593-1.382-.809-.564-.197-1.2-.377-1.928-.52-.727-.145-1.455-.306-2.2-.468a21.03 21.03 0 0 1-2.219-.611 6.805 6.805 0 0 1-1.909-.97 4.278 4.278 0 0 1-1.346-1.546c-.345-.63-.509-1.402-.509-2.337 0-1.006.255-1.833.746-2.516a5.629 5.629 0 0 1 1.873-1.636c.763-.413 1.6-.7 2.527-.88a15.571 15.571 0 0 1 2.655-.252c.964 0 1.892.108 2.764.306a7.18 7.18 0 0 1 2.383.988 5.86 5.86 0 0 1 1.764 1.761c.472.72.763 1.6.891 2.624h-4.292c-.2-.97-.636-1.635-1.346-1.959-.709-.341-1.527-.503-2.436-.503-.291 0-.637.018-1.037.072a5.72 5.72 0 0 0-1.127.27 2.45 2.45 0 0 0-.892.575c-.236.252-.363.575-.363.988 0 .504.182.899.527 1.204.346.306.8.558 1.364.773.564.198 1.2.378 1.928.522.727.143 1.473.305 2.236.467.746.162 1.473.377 2.201.61a6.667 6.667 0 0 1 1.927.971 4.795 4.795 0 0 1 1.364 1.528c.346.611.528 1.384.528 2.283 0 1.096-.255 2.013-.764 2.785a6.015 6.015 0 0 1-1.964 1.852c-.8.467-1.71.826-2.692 1.042-.982.216-1.964.323-2.927.323-1.182 0-2.273-.125-3.274-.395-1-.27-1.873-.665-2.6-1.186a5.914 5.914 0 0 1-1.728-1.995c-.418-.79-.636-1.743-.673-2.84h4.147v-.036Zm13.566-12.527h3.109v-5.535h4.11v5.535h3.71v3.038h-3.71v9.849c0 .431.018.79.055 1.114.036.306.127.575.254.79.128.217.328.378.6.486.273.108.619.162 1.092.162.29 0 .581 0 .872-.018.291-.018.582-.054.873-.126v3.145c-.454.054-.909.09-1.327.144a10.77 10.77 0 0 1-1.328.072c-1.091 0-1.964-.108-2.618-.306-.655-.197-1.182-.503-1.546-.898-.382-.396-.618-.88-.764-1.474a10.969 10.969 0 0 1-.236-2.03V27.821h-3.11v-3.074h-.036Zm13.839 0h3.891v2.499h.073c.582-1.079 1.382-1.834 2.418-2.3 1.037-.468 2.146-.702 3.365-.702 1.473 0 2.746.252 3.837.773 1.091.503 2 1.204 2.727 2.103.728.898 1.255 1.94 1.619 3.127.364 1.186.545 2.462.545 3.81 0 1.24-.163 2.444-.49 3.595-.328 1.168-.819 2.192-1.473 3.091-.655.899-1.492 1.6-2.51 2.139-1.018.539-2.2.809-3.582.809-.601 0-1.201-.054-1.801-.162a7.977 7.977 0 0 1-1.727-.521 6.253 6.253 0 0 1-1.528-.917 5.706 5.706 0 0 1-1.182-1.294h-.073V50h-4.109V24.748Zm14.366 9.238c0-.826-.109-1.635-.328-2.426a6.493 6.493 0 0 0-.982-2.085 4.982 4.982 0 0 0-1.618-1.456 4.58 4.58 0 0 0-2.237-.557c-1.727 0-3.037.593-3.91 1.78-.873 1.186-1.309 2.767-1.309 4.744 0 .935.109 1.798.346 2.588.236.791.563 1.474 1.036 2.05.455.574 1 1.024 1.637 1.347.636.342 1.382.504 2.218.504.946 0 1.728-.198 2.383-.576a5.01 5.01 0 0 0 1.6-1.473 6.095 6.095 0 0 0 .909-2.067c.164-.773.255-1.564.255-2.373Zm7.256-16.265h4.109v3.846h-4.109v-3.846Zm0 7.027h4.109v18.44h-4.109v-18.44Zm7.783-7.027h4.11v25.467h-4.11V17.721Zm16.712 25.97c-1.491 0-2.819-.251-3.983-.736a8.792 8.792 0 0 1-2.964-2.013 8.758 8.758 0 0 1-1.837-3.074c-.418-1.186-.636-2.498-.636-3.918 0-1.402.218-2.696.636-3.882a8.758 8.758 0 0 1 1.837-3.073c.8-.863 1.8-1.528 2.964-2.013 1.164-.485 2.492-.737 3.983-.737s2.818.252 3.982.737a8.79 8.79 0 0 1 2.964 2.013 8.728 8.728 0 0 1 1.837 3.073c.418 1.186.637 2.48.637 3.882 0 1.42-.219 2.732-.637 3.918a8.728 8.728 0 0 1-1.837 3.074c-.8.862-1.8 1.527-2.964 2.013-1.164.485-2.491.737-3.982.737Zm0-3.217c.909 0 1.709-.197 2.382-.575a5.052 5.052 0 0 0 1.655-1.491c.436-.611.745-1.312.964-2.085.2-.773.309-1.564.309-2.373 0-.79-.109-1.563-.309-2.354a6.124 6.124 0 0 0-.964-2.085 5.001 5.001 0 0 0-1.655-1.474c-.673-.377-1.473-.575-2.382-.575-.91 0-1.71.198-2.383.575a5.202 5.202 0 0 0-1.654 1.474c-.437.611-.746 1.294-.964 2.085-.2.79-.309 1.564-.309 2.354 0 .81.109 1.6.309 2.373.2.773.527 1.474.964 2.085a5.049 5.049 0 0 0 1.654 1.491c.673.396 1.473.575 2.383.575Zm10.62-15.726h3.109v-5.535h4.11v5.535H206v3.038h-3.71v9.849c0 .431.018.79.055 1.114.036.306.127.575.254.79.128.217.328.378.601.486.272.108.618.162 1.091.162.291 0 .582 0 .872-.018.291-.018.582-.054.873-.126v3.145c-.454.054-.909.09-1.327.144a10.77 10.77 0 0 1-1.328.072c-1.091 0-1.964-.108-2.618-.306-.655-.197-1.182-.503-1.546-.898-.382-.396-.618-.88-.764-1.474a10.969 10.969 0 0 1-.236-2.03V27.821h-3.11v-3.074h-.036Z"
          />
          <path
            fill="#00B67A"
            d="M49.336 17.721h-18.84L24.677 0 18.84 17.721 0 17.703l15.257 10.963L9.42 46.37l15.257-10.946 15.24 10.946-5.82-17.704 15.239-10.945Z"
          />
          <path
            fill="#005128"
            d="m35.406 32.674-1.31-4.008-9.419 6.758 10.73-2.75Z"
          />
        </g>
        <defs>
          <clipPath id="a">
            <path fill="#fff" d="M0 63h348v65H0z" />
          </clipPath>
          <clipPath id="b">
            <path fill="#fff" d="M0 0h206v50H0z" />
          </clipPath>
        </defs>
      </svg>
    </div>
  )
}

export const SearchIcon = (props: Props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
      <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>
  )
}

export const ChevronRight = (props: Props) => {
  return (
    <div {...props}>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={2} stroke="currentColor">
        <path strokeLinecap="round" strokeLinejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
      </svg>
    </div>

  )
}

export const ChevronLeft = (props: Props) => {
  return (
    <div {...props}>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={2} stroke="currentColor">
        <path strokeLinecap="round" strokeLinejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
      </svg>
    </div>

  )
}

export const Burger = forwardRef<HTMLDivElement, BurgerProps>(function Burger(
  props: BurgerProps, 
  ref
) {
  // const { animate } = props;

  return (
    // <Transition
    //   mountOnEnter
    //   unmountOnExit
    //   in={animate}
    //   addEndListener={(node: HTMLElement, done: () => void) => {
    //     const ctx = gsap.context(() => {
    //       const lines = Array.from<HTMLElement>(
    //         document.querySelectorAll(".burger-line")
    //       );

    //       if (animate) {
    //         console.log(lines);
    //         // gsap.set(menuItems, { xPercent : 110 });
    //         // gsap
    //         //   .timeline({ onComplete: done })
    //         //   .to("#overlay", { autoAlpha: 0.75, duration: 0.1 })
    //         //   .to("#modal", { autoAlpha: 1, y: 0, duration: 0.25 }, 0)
    //         //   .to(menuItems, { xPercent: 0, stagger: 0.1}, 0);
    //       } else {
    //         // gsap
    //         //   .timeline({ onComplete: done })
    //         //   .to(menuItems, { xPercent: 110, stagger: 0.1})
    //         //   .to("#modal", { autoAlpha: 0, duration: 0.25 }, ">-=0.25")
    //         //   .to("#overlay", { autoAlpha: 0, duration: 0.1 }, ">-=0.1");
    //       }
    //     }, node);

    //     // document.body.classList.toggle("overflow-hidden");
    //   }}
    // >
    // <Transition>
      <div ref={ref} {...props}>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
          <rect width="100%" height="32" y="96" fill="currentColor" className="burger-line"/>
          <rect width="100%" height="32" y="240" fill="currentColor" className="burger-line"/>
          <rect width="100%" height="32" y="384" fill="currentColor" className="burger-line"/>
        </svg>
      </div>
    // </Transition>
  );
});

export const HomeIcon = (props: Props) => {
  return (
    <div {...props}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="">
        <path d="M19.006 3.705a.75.75 0 00-.512-1.41L6 6.838V3a.75.75 0 00-.75-.75h-1.5A.75.75 0 003 3v4.93l-1.006.365a.75.75 0 00.512 1.41l16.5-6z" />
        <path fillRule="evenodd" d="M3.019 11.115L18 5.667V9.09l4.006 1.456a.75.75 0 11-.512 1.41l-.494-.18v8.475h.75a.75.75 0 010 1.5H2.25a.75.75 0 010-1.5H3v-9.129l.019-.006zM18 20.25v-9.565l1.5.545v9.02H18zm-9-6a.75.75 0 00-.75.75v4.5c0 .414.336.75.75.75h3a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75H9z" clipRule="evenodd" />
      </svg>
    </div>

  );
}

export const CarIcon = (props: Props) => {
  return (
    <div {...props}>
      <svg stroke="currentColor" fill="currentColor" strokeWidth="0" viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="M494.26 276.22c-3.6-40.41-9.53-48.28-11.77-51.24-5.15-6.84-13.39-11.31-22.11-16a3.6 3.6 0 01-.91-5.68 15.93 15.93 0 004.53-12.53A16.27 16.27 0 00447.65 176h-15.6a17 17 0 00-2 .13 8.5 8.5 0 00-1.41-.47c-9.24-19.53-21.89-46.27-48.11-59.32C341.64 97 270 96 256 96s-85.64 1-124.48 20.31c-26.22 13.05-38.87 39.79-48.11 59.32l-.08.16a6.52 6.52 0 00-1.35.34 17 17 0 00-2-.13H64.35A16.27 16.27 0 0048 190.77a15.93 15.93 0 004.59 12.47 3.6 3.6 0 01-.91 5.68c-8.72 4.72-17 9.19-22.11 16-2.24 3-8.16 10.83-11.77 51.24-2 22.74-2.3 46.28-.73 61.44 3.29 31.5 9.46 50.54 9.72 51.33a16 16 0 0013.2 10.87v.2a16 16 0 0016 16h56a16 16 0 0016-16c8.61 0 14.6-1.54 20.95-3.18a158.83 158.83 0 0128-4.91C207.45 389 237.79 388 256 388c17.84 0 49.52 1 80.08 3.91a159.16 159.16 0 0128.11 4.93c6.08 1.56 11.85 3 19.84 3.15a16 16 0 0016 16h56a16 16 0 0016-16v-.12A16 16 0 00485.27 389c.26-.79 6.43-19.83 9.72-51.33 1.57-15.17 1.29-38.67-.73-61.45zm-381.93-86.91c8-17 17.15-36.24 33.44-44.35 23.54-11.72 72.33-17 110.23-17s86.69 5.24 110.23 17c16.29 8.11 25.4 27.36 33.44 44.35l1 2.17a8 8 0 01-7.44 11.42C360 202 290 199.12 256 199.12s-104 2.95-137.28 3.85a8 8 0 01-7.44-11.42c.35-.74.72-1.49 1.05-2.24zm11.93 79.63A427.17 427.17 0 0172.42 272c-10.6 0-21.53-3-23.56-12.44-1.39-6.35-1.24-9.92-.49-13.51C49 243 50 240.78 55 240c13-2 20.27.51 41.55 6.78 14.11 4.15 24.29 9.68 30.09 14.06 2.91 2.16 1.36 7.8-2.38 8.1zm221.38 82c-13.16 1.5-39.48.95-89.34.95s-76.17.55-89.33-.95c-13.58-1.51-30.89-14.35-19.07-25.79 7.87-7.54 26.23-13.18 50.68-16.35s34.8-4.8 57.62-4.8 32.12 1 57.62 4.81 44.77 9.52 50.68 16.35c10.78 12.24-5.29 24.19-18.86 25.84zm117.5-91.39c-2 9.48-13 12.44-23.56 12.44a455.91 455.91 0 01-52.84-3.06c-3.06-.29-4.48-5.66-1.38-8.1 5.71-4.49 16-9.91 30.09-14.06 21.28-6.27 33.55-8.78 44.09-6.69 2.57.51 3.93 3.27 4.09 5a40.64 40.64 0 01-.49 14.48z"></path></svg>
    </div>
  );
}

export const Plane = (props: Props) => {
  return (
    <div {...props}>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor">
        <path strokeLinecap="round" strokeLinejoin="round" d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5" />
      </svg>
    </div>
  )
}
export const Tick = (props: Props) => {
  return (
    <div   {...props}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        stroke="currentColor"
        strokeWidth={1.5}
        viewBox="0 0 24 24"
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0z"
        />
      </svg>
    </div>
  );
}

export const BMWLogo = (props: Props) => {
  const classes = cn("", props.className);
  return (
    <div {...props} className={classes}>
      <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 53 53"
    >
        <g fill="none" fillRule="nonzero">
          <path
            fill="currentColor"
            d="M26.5 0C11.865 0 0 11.865 0 26.5S11.865 53 26.5 53 53 41.135 53 26.5 41.135 0 26.5 0Zm24.777 26.5c0 13.683-11.092 24.777-24.777 24.777S1.723 40.183 1.723 26.5c0-13.683 11.094-24.777 24.777-24.777 13.683 0 24.777 11.094 24.777 24.777Z"
          />
          <path
            fill="currentColor"
            d="M26.5 10.796v.861c8.183 0 14.843 6.658 14.843 14.843h.86c0-8.672-7.03-15.704-15.703-15.704m0 30.547c-8.183 0-14.843-6.658-14.843-14.843h-.86c0 8.672 7.03 15.704 15.703 15.704"
          />
          <g fill="currentColor">
            <path d="M39.188 15.317c.36.384.878 1.002 1.17 1.378l5.36-3.38a35.46 35.46 0 0 0-1.013-1.249l-3.395 2.23-.232.197.173-.25 1.499-2.971-1.06-1.053-2.994 1.489-.252.171.201-.23 2.246-3.37c-.395-.334-.775-.64-1.26-1.011l-3.402 5.32c.431.329 1 .812 1.362 1.142l3.204-1.651.205-.15-.15.204-1.662 3.184ZM27.023 8.576l1.465-3.26.093-.288-.026.301.154 4.355a22.46 22.46 0 0 1 1.567.206l-.238-6.45c-.731-.08-1.46-.137-2.188-.168l-1.443 3.557-.052.264-.051-.264-1.442-3.557c-.728.03-1.457.088-2.188.168l-.238 6.45a23.427 23.427 0 0 1 1.567-.206l.154-4.355-.026-.301.093.289 1.465 3.259h1.334ZM15.175 13.716c.847-.886 1.327-1.91.48-2.886-.461-.53-1.235-.647-1.876-.385l-.064.024.02-.055c.095-.252.156-1.056-.533-1.611-.337-.27-.759-.371-1.185-.328-.796.08-1.407.62-3.073 2.464a39.919 39.919 0 0 0-1.673 2.004l4.575 4.31c1.516-1.667 2.134-2.286 3.33-3.537Zm-5.97-1.054c.922-1.12 1.901-2.135 2.345-2.537.14-.127.293-.254.478-.303.3-.082.61.13.68.436.07.307-.124.6-.34.84-.488.546-2.275 2.403-2.275 2.403l-.887-.84Zm1.792 1.688s1.74-1.828 2.309-2.412c.226-.232.37-.373.526-.448.2-.098.42-.118.616.012.193.128.282.35.234.569-.058.261-.273.51-.45.7l-2.307 2.452-.928-.873Z" />
          </g>
          <path
            fill="currentColor"
            d="M26.5 10.796V26.5H10.796c0-8.679 7.025-15.704 15.704-15.704ZM42.204 26.5c0 8.679-7.025 15.704-15.704 15.704V26.5h15.704Z"
          />
        </g>
      </svg>
    </div>
  )
};

export const VWLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
      >
        <path d="M12 22.586c-5.786 0-10.543-4.8-10.543-10.586 0-1.2.214-2.357.6-3.471l6.172 12c.085.171.171.3.385.3.215 0 .3-.129.386-.3l2.871-6.386c.043-.086.086-.129.129-.129.086 0 .086.086.129.129l2.914 6.386c.086.171.171.3.386.3.214 0 .3-.129.385-.3l6.172-12c.385 1.071.6 2.228.6 3.471-.043 5.786-4.8 10.586-10.586 10.586Zm0-13.329c-.086 0-.086-.086-.129-.128l-3.3-7.115a10.117 10.117 0 0 1 6.858 0l-3.3 7.115c-.043.042-.043.128-.129.128Zm-3.471 7.714c-.086 0-.086-.085-.129-.128L3 6.47c.943-1.542 2.314-2.828 3.9-3.728l3.814 8.228c.086.172.172.215.3.215h1.972c.128 0 .214-.043.3-.215l3.771-8.228c1.586.9 2.957 2.186 3.9 3.728L15.6 16.843c-.043.086-.086.128-.129.128-.085 0-.085-.085-.128-.128L13.286 12.3c-.086-.171-.172-.214-.3-.214h-1.972c-.128 0-.214.043-.3.214l-2.057 4.543c-.043.043-.043.128-.128.128ZM12 24c6.643 0 12-5.357 12-12S18.643 0 12 0 0 5.357 0 12s5.357 12 12 12Z" />
      </svg>
    </div>
  )
}

export const MercedesLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        xmlSpace="preserve"
        viewBox="0 0 1000 1001"
      >
        <path
          d="M732.05 56.712C891.26 140.479 1000 307.492 1000 500S891.26 860.042 732.05 943.288v-57.232c60.874-36.42 112.383-87.409 149.844-147.763L732.05 677.42v-92.612L896.462 713.32c34.34-63.475 53.59-135.796 53.59-213.319 0-163.371-87.409-306.972-218.002-386.056V56.712zM500.52 0c83.247 0 161.81 20.291 231.53 56.712v57.232c-63.996-38.502-138.918-61.395-218.002-63.996l57.232 409.47 160.77 125.39v92.611l-232.57-94.172-231.01 94.693v-92.092l161.811-126.43 56.712-409.47c-80.125 2.601-154.527 25.494-218.523 63.996V56.712C337.67 20.292 416.753 0 500.52 0zm231.53 943.288c-69.72 36.42-148.283 57.232-231.53 57.232-83.767 0-162.85-20.811-232.05-56.711v-57.753c67.638 41.103 147.243 64.516 232.05 64.516 84.287 0 163.372-23.413 231.53-64.516v57.232zm-463.58.52C108.74 860.043 0 692.509 0 500 0 307.492 108.74 140.479 268.47 56.712v57.232C137.357 193.028 49.948 336.108 49.948 500c0 77.523 19.771 150.884 54.11 214.36L268.47 585.848v92.092l-149.323 61.394c37.46 59.834 88.45 110.302 149.323 146.722v57.753z"
          style={{
            clipRule: "evenodd",
            fill: "currentColor",
            fillRule: "evenodd",
          }}
        />
      </svg>
    </div>
  );
};

export const AudiLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264.58 93.42"><path fill="currentColor" d="M217.272 0c-10.547 0-20.341 3.465-28.327 9.342C180.96 3.465 171.165 0 160.618 0s-20.34 3.465-28.326 9.342C124.306 3.465 114.662 0 103.965 0 93.418 0 83.624 3.465 75.638 9.342 67.803 3.465 58.01 0 47.312 0 21.245 0 0 20.944 0 46.709c0 25.765 21.245 46.709 47.312 46.709 10.547 0 20.34-3.466 28.326-9.342 7.986 5.876 17.78 9.342 28.327 9.342s20.34-3.466 28.327-9.342c7.835 5.876 17.629 9.342 28.326 9.342 10.547 0 20.341-3.466 28.327-9.342 7.835 5.876 17.629 9.342 28.327 9.342 26.066 0 47.311-20.944 47.311-46.71C264.583 20.945 243.338 0 217.272 0zm-28.327 70.817c-5.726-6.48-9.191-14.917-9.191-24.108s3.465-17.629 9.191-24.108c5.726 6.479 9.191 14.917 9.191 24.108 0 9.19-3.465 17.629-9.19 24.108zm-56.653 0c-5.726-6.48-9.191-14.917-9.191-24.108s3.465-17.629 9.19-24.108c5.726 6.479 9.192 14.917 9.192 24.108 0 9.19-3.466 17.629-9.191 24.108zm-56.654 0c-5.725-6.48-9.19-14.917-9.19-24.108s3.465-17.629 9.19-24.108c5.726 6.479 9.191 14.917 9.191 24.108.151 9.19-3.465 17.629-9.19 24.108zM9.794 46.709c0-20.341 16.875-36.915 37.518-36.915 7.684 0 14.916 2.26 20.943 6.328-7.232 8.136-11.602 18.834-11.602 30.587 0 11.752 4.37 22.45 11.602 30.587-6.027 3.917-13.108 6.328-20.943 6.328-20.643 0-37.518-16.574-37.518-36.915zM83.02 77.296c7.233-8.137 11.602-18.835 11.602-30.587 0-11.753-4.37-22.45-11.602-30.587 6.027-3.918 13.109-6.328 20.944-6.328 7.835 0 14.917 2.26 20.944 6.328-7.233 8.136-11.753 18.834-11.753 30.587 0 11.752 4.37 22.45 11.753 30.587-6.027 3.917-13.109 6.328-20.944 6.328-7.684 0-14.917-2.41-20.944-6.328zm56.654 0c7.232-8.137 11.752-18.835 11.752-30.587 0-11.753-4.37-22.45-11.752-30.587 6.027-3.918 13.108-6.328 20.943-6.328 7.835 0 14.917 2.26 20.944 6.328-7.232 8.136-11.753 18.834-11.753 30.587 0 11.752 4.37 22.45 11.753 30.587-6.027 3.917-13.109 6.328-20.944 6.328-7.835 0-14.916-2.41-20.943-6.328zm77.597 6.328c-7.685 0-14.917-2.26-20.944-6.328 7.232-8.137 11.753-18.835 11.753-30.587 0-11.753-4.37-22.45-11.753-30.587 6.027-3.918 13.109-6.328 20.944-6.328 20.642 0 37.518 16.574 37.518 36.915 0 20.34-16.876 36.915-37.518 36.915z"/></svg>
    </div>
  );
};

export const MiniLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 132.292 58.029"
      >
        <path
          d="M88.725 154.442a29.005 29.005 0 0 0-24.445 13.402h-41.7l4.151 4.151h35.383a29.005 29.005 0 0 0-1.593 4.836H31.568l4.1 4.101H59.85a29.005 29.005 0 0 0-.129 2.515 29.005 29.005 0 0 0 .116 2.322H40.505l4.1 4.1h15.863a29.005 29.005 0 0 0 1.53 4.837H49.442l4.152 4.152h10.6a29.005 29.005 0 0 0 24.531 13.593 29.005 29.005 0 0 0 24.531-13.593h10.602l4.15-4.152h-12.554a29.005 29.005 0 0 0 1.53-4.836h15.861l4.101-4.1h-19.332a29.005 29.005 0 0 0 .116-2.323 29.005 29.005 0 0 0-.128-2.515h24.18l4.102-4.1H116.93a29.005 29.005 0 0 0-1.593-4.837h35.383l4.151-4.151h-41.7a29.005 29.005 0 0 0-24.446-13.402Zm0 3.931a25.073 25.073 0 0 1 25.074 25.074 25.073 25.073 0 0 1-25.074 25.073 25.073 25.073 0 0 1-25.073-25.073 25.073 25.073 0 0 1 25.073-25.074ZM68.78 176.948v12.997h2.71v-10.23l2.86 10.23h2.81l2.868-10.23v10.23h2.71v-12.997h-4.376l-2.593 8.866-2.622-8.866zm16.787 0v12.997h2.918v-12.997zm5.717 0v12.997h2.711v-8.475l5.826 8.475h2.928v-12.997h-2.711v8.68l-5.914-8.68zm14.47 0v12.997h2.919v-12.997z"
          style={{
            opacity: 1,
            fill: "currentColor",
            fillOpacity: 1,
            stroke: "none",
            strokeWidth: 1.68198478,
            strokeLinecap: "butt",
            strokeLinejoin: "miter",
            strokeMiterlimit: 4,
            strokeDasharray: "none",
            strokeDashoffset: 0,
            strokeOpacity: 1,
            paintOrder: "markers stroke fill",
          }}
          transform="translate(-22.58 -154.432)"
        />
      </svg>

    </div>
  )
};

export const PeugeotLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 548.76" ><defs><path id="a" d="M56.42 62H0V.08h56.42z"/><mask id="b" ></mask></defs><path d="M26.945 61.413c-7.888-3.67-14.739-9.682-19.292-16.93C3.111 37.259.724 28.89.14 18.144c-.186-3.427-.186-7.703-.001-13.07l.084-2.448L2.64 2.22A155.856 155.856 0 0 1 28.209.08c8.461 0 17.063.72 25.567 2.14l2.417.405.085 2.449c.186 5.367.186 9.643-.001 13.07-.585 10.745-2.971 19.114-7.513 26.34-4.552 7.247-11.405 13.26-19.292 16.929L28.209 62z" mask="url(#b)" transform="translate(-.003 -.718) scale(8.86264)"/><path fill="currentColor" d="M250.002 15.646c-75.595 0-154.063 6.433-233.705 20.13-1.19 31.813-2.544 80.988-.268 122.716 5.07 93.037 25.625 165.25 64.686 227.26 38.944 61.83 99.253 114.994 169.287 146.568 70.034-31.574 130.337-84.738 169.281-146.568 39.067-62.01 59.614-134.223 64.69-227.26 2.266-41.728.917-90.903-.272-122.717-79.642-13.696-158.104-20.129-233.7-20.129zm0 8.963c74.518 0 150.182 6.315 224.988 18.778 1.642 47.196 1.642 84.749.01 114.62-4.985 91.453-25.102 162.31-63.32 222.98-38.214 60.664-95.52 110.776-161.678 141.478-66.163-30.702-123.464-80.814-161.678-141.479-38.218-60.67-58.34-131.526-63.32-222.978-1.632-29.872-1.633-67.425.01-114.621 74.805-12.463 150.465-18.778 224.988-18.778z"/><path fill="currentColor"  d="M93.654 67.299a18.504 18.504 0 0 0-2.341.101 1542.465 1542.465 0 0 0-33.165 3.819v32.611c1.915-.245 3.834-.479 5.748-.713v-10.09c9.129-1.117 18.272-2.15 27.416-3.101 6.612-.686 10.307-3.446 10.307-10.276v-3.69c0-5.841-2.828-8.534-7.965-8.66zm-.634 5.185c1.487-.154 2.98.974 2.98 2.47v6.605c0 1.42-1.493 2.778-2.98 2.937-9.715.995-19.425 2.09-29.124 3.272V75.762a1532.773 1532.773 0 0 1 29.124-3.278zm146.375-13.273a1515.05 1515.05 0 0 1 31.042.101v5.256a1568.783 1568.783 0 0 0-33.185-.086c-1.499.016-2.997 1.309-2.997 2.804v16.34c0 1.495 1.498 2.973 2.997 2.957 9.922-.085 19.84-.069 29.762.043v-8.814a1441.56 1441.56 0 0 0-17.27-.09v-5.26c7.635 0 15.27.058 22.906.17v19.324c-10.728-.16-21.456-.202-32.183-.138-7.854.053-11.848-1.298-11.848-8.905V68.701c0-7.101 3.567-9.437 10.776-9.49zm112.084 3.41c-6.187.018-8.97 1.97-8.97 8.37v14.562c0 7.75 3.993 9.262 11.83 9.789 7.199.49 14.386 1.03 21.579 1.62 7.758.64 11.816-.68 11.816-8.005V74.395c0-7.463-4.698-9.458-11.816-10.043a1542.67 1542.67 0 0 0-21.578-1.627 41.035 41.035 0 0 0-2.861-.104zm-.342 5.15c9.336.612 18.66 1.315 27.986 2.102 1.493.128 2.986 1.536 2.986 3.238v16.135c0 1.49-1.493 2.856-2.986 2.729-9.325-.788-18.65-1.49-27.986-2.108-1.712-.117-2.998-1.685-2.998-3.18V70.56c0-1.708 1.286-2.905 2.998-2.788zm-136.64-8.185v23.59c0 7.463-3.93 9.101-11.848 9.346-6.894.212-13.788.468-20.682.776-7.347.33-11.836-1.064-11.836-8.452v-23.59l5.63-.287v24.585c0 1.494 1.285 2.712 2.991 2.633 9.038-.42 18.07-.761 27.107-1.022 1.717-.048 2.858-1.356 2.858-2.85V59.728c1.925-.053 3.85-.1 5.78-.143zm72.246.028c13.884.33 27.763.851 41.641 1.564v5.256a1534.228 1534.228 0 0 0-36.005-1.415v8.026c10.68.298 21.354.702 32.023 1.218v5.26a1530.507 1530.507 0 0 0-32.023-1.217v8.808c12.007.33 24.009.804 36.005 1.42v5.256a1554.887 1554.887 0 0 0-41.641-1.564zm-130.737 2.442v5.256c-11.991.74-23.977 1.617-35.953 2.633v8.032a1489.32 1489.32 0 0 1 31.975-2.383v5.26a1535.868 1535.868 0 0 0-31.975 2.378v8.814a1506.04 1506.04 0 0 1 35.953-2.633v5.255a1533.917 1533.917 0 0 0-41.578 3.122V65.173a1533.901 1533.901 0 0 1 41.578-3.117zm242.162 4.287a1546.409 1546.409 0 0 1 43.683 4.872v5.26a1486.556 1486.556 0 0 0-18.885-2.26v27.356c-1.914-.218-3.828-.43-5.753-.643V73.57c-6.34-.697-12.695-1.35-19.045-1.968zM205.294 128.75c26.766-2.345 62.985-2.984 97.583-.372 1.968.149 3.882.612 5.7 1.378 11.336 4.755 31.447 15.16 53.81 27.92a16.86 16.86 0 0 1 2.766 1.973c5.924 5.208 20.933 20.527 20.933 20.527l-4.681-.926a4.953 4.953 0 0 1-1.824-.755c-9.469-6.346-23.294-14.606-34.88-20.43a12.833 12.833 0 0 0-4.394-1.288c-5.636-.601-13.255-1.128-18.24-1.33-2.458-.1-4.132-.51-6.537-1.729-4.596-2.324-15.729-7.361-21.274-9.473-2.373-.904-3.583-1.117-5.908-1.08-9.528.138-31.234.83-42.319 1.516a5.3 5.3 0 0 1-1.125-.053l-5.284-.825c14.983-2.574 52.018-5.867 67.347-6.67l-6.238-2.08a12.872 12.872 0 0 0-3.733-.643 931.114 931.114 0 0 0-20.333-.24l-3.281.001c-14.55.028-33.27.385-50.536 1.68a13.23 13.23 0 0 0-4.366 1.085c-6.974 3.056-23.98 12.255-41.036 21.703l-3.787 2.101c-4.41 2.451-8.773 4.89-12.916 7.212 0 0 2.128-2.728 2.538-3.26.363-.463.475-.548.965-.867.685-.449 3.025-1.986 5.384-3.546l1.748-1.158c1.416-.94 2.68-1.786 3.393-2.275.352-.24.576-.41 1.019-.74 5.134-3.861 13.239-10.67 18.07-14.888a14.342 14.342 0 0 0 2.782-3.292c1.563-2.522 3.269-5.256 4.32-6.772.895-1.313 2.425-2.234 4.334-2.404z"/><path fill="currentColor"  d="M218.261 154.551a.788.788 0 0 1 .693 1.181L206.02 177.95a5.708 5.708 0 0 1-3.354 2.713l-24.254 7.57c-2.815.85-5.193 1.308-8.126 1.531-5.38.404-21.36.904-21.36.904l.353-.755a1.59 1.59 0 0 1 .82-.793l7.561-3.202a3.664 3.664 0 0 0 1.44-1.08l11.677-14.34c.624-.766 1.44-1.5 2.308-1.957 7.716-4.048 21.434-10.128 31.042-13.33.907-.303 2.128-.495 3.082-.505zm-60.365 39.919c.507-.042.986.24 1.184.703.666 1.548.485 3.277-.16 4.755-.25.601-1.024 1.187-1.658 1.325l-5.306 1.175a.489.489 0 0 1-.591-.51l.495-6.213a.86.86 0 0 1 .79-.787zm117.648-26.234a3.902 3.902 0 0 1 2.341.32l5.54 2.643c.544.26.944.755 1.087 1.35.752 3.16 1.675 7.346 2.293 10.905a6.425 6.425 0 0 1-.778 4.292c-2.293 3.974-7.001 11.123-9.635 14.963-.586.862-.656 1.904-.474 2.931 1.194 6.585 6.174 29.58 6.174 29.58l-3.135-2.846c-.624-.574-1.035-1.18-1.301-1.973-2.229-6.506-6.398-20.096-8.318-26.708a3.416 3.416 0 0 1 .645-3.122c3.269-3.958 8.03-10.287 10.813-14.298.779-1.128 1.035-2.372.576-3.303-.64-1.309-1.717-3.298-2.751-5.101a2.285 2.285 0 0 0-1.29-1.053l-3.76-1.202a3.134 3.134 0 0 0-2.01.037c-8.19 2.963-19.205 7.234-25.944 10.021-.987.41-1.392.442-2.586.26-1.952-.287-7.635-1.302-10.424-1.824a.74.74 0 0 1-.496-1.1l3.306-5.714a3.188 3.188 0 0 1 2.063-1.516c10.632-2.414 24.692-5.191 38.064-7.542z"/><path fill="currentColor"  d="M159.949 174.223l-2.176 2.67c-.122.117-.24.228-.362.35-1.914 1.41-9.97 7.565-12.151 9.288-.619.49-.864.915-1.008 1.686-.49 2.724-1.306 7.9-1.546 10.766-.07.84-.432 1.255-1.29 1.601-3.738 1.516-8.17 3.112-11.752 4.543-.768.303-.981.42-1.434.766-.358.276-5.119 4.516-5.119 4.516s10.35-2.543 14.145-3.4c.907-.201 1.296-.148 2.133.245.784.362 2.09.878 2.778 1.128 1.056.388 1.616.372 2.783.117 4.276-.952 11.47-2.654 15.297-3.649 1.99-.516 3.077-1.053 4.762-2.229 1.834-1.27 6.478-4.744 6.478-4.744s-.085.611-.15.952c-.047.292-.154.457-.346.686-.944 1.133-2.597 2.979-3.418 3.825-1.882 1.941-3.007 2.632-5.369 3.617-10.877 4.52-29.464 11.542-43.406 16.356-.912.319-1.307.58-1.984 1.271a70.038 70.038 0 0 0-1.717 1.83s11.368.824 14.839 1.223c1.125.128 1.93.495 2.788 1.234 2.853 2.447 12.296 12.144 15.122 15.511 0 0-26.846 4.452-39.285 7.532-1.536.378-2.304 1.35-2.65 2.58-1.03 3.606-3.455 15.202-3.455 15.202s-.864-.277-2.07-.968c-.826-.474-1.247-.867-2.153-1.825-2.943-3.1-7.78-9.037-10.104-12.479-.683-1.015-.97-2.308-.117-3.345 2.522-3.096 7.587-8.745 10.38-11.65.3-.313.678-.86 1.078-1.648.94-1.863 2.18-6.58 2.61-8.284l.139-.55.018-.076-.075.047-.51.32-2.289 1.436c-.72.458-.917.655-1.216 1.282a57.878 57.878 0 0 1-1.85 3.48c-.197.34-.725.866-1.008 1.084-3.567 2.718-7.507 5.638-10.311 7.607-.192.133-.438.074-.603-.086-.357-.356-1.855-2.053-2.122-2.452a1.772 1.772 0 0 1-.325-1.053c-.005-.707.064-1.952.133-2.878.085-1.095.4-1.617 1.738-3a229.935 229.935 0 0 1 4.847-4.845c4.207-3.532 14.828-12.128 33.793-25.628.357-.255.683-.553.944-.91 1.994-2.68 7.651-10 9.048-11.739.197-.244.416-.473.667-.67 2.234-1.76 3.337-2.521 5.603-3.947 5.284-3.319 15.516-9.372 21.248-12.696zM117.07 265.44l-2.34 16.111-7.96-9.32c1.45-3.132 5.689-6.09 10.3-6.792zm52.429 8.547c-3.967 6.51-8.707 13.426-12.29 17.745-.47.564-1.093 1-1.802 1.266-3.92 1.462-10.45 3.665-15.26 5.127zm169.234-104.604a8.82 8.82 0 0 1 6.467.15c16.006 6.701 42.921 22.467 57.883 33.574 1.444 1.074 2.02 1.813 2.399 3.547 3.514 15.936 4.847 40.57 2.634 61.309-.16 1.49-.459 2.383-1.237 3.973-9.48 19.335-20.15 37.532-31.378 51.57l.022-.23c.146-1.495.952-9.924.996-14.484a1.65 1.65 0 0 1 .656-1.303c2.085-1.617 4.948-3.915 6.569-5.314.789-.68 1.226-1.191 1.637-1.85 4.574-7.373 12.753-22.81 16.048-32.096a16.922 16.922 0 0 0 .928-7.064c-1.056-12.942-3.092-30.872-6.126-42.574a7.199 7.199 0 0 0-3.68-4.623c-2.617-1.34-7.752-3.675-19.444-8.35a16.521 16.521 0 0 1-4.468-2.666c-7.668-6.425-19.654-16.058-27.113-21.6a9.319 9.319 0 0 0-7.619-1.612c-5.433 1.228-12.349 2.941-16.24 3.994-1.323.357-1.846.389-3.21.229-.711-.082-1.63-.172-2.595-.26l-1.463-.128c-1.7-.145-3.294-.267-3.918-.315l-.278-.02c12.684-5.942 24.889-11.07 32.53-13.857z"/><path fill="currentColor"  d="M149.875 251.137a7.167 7.167 0 0 1 3.876-.144c5.77 1.383 17.98 4.367 27.209 6.723 1.295.33 2.91 1.538 3.599 2.681l2.01 3.335a3.913 3.913 0 0 1 .128 3.82c-1.678 3.244-4.07 7.637-6.6 12.166l-1.914 3.407c-3.523 6.235-7.032 12.25-9.023 15.416-1.311 2.09-2.042 3.016-4.377 3.84-9.08 3.186-20.357 6.995-27.06 9.16-1.37.441-1.834 1.271-1.567 2.787.48 2.76 2.026 12.133 2.618 14.867.219 1.01 1.029 1.814 2.533 1.527 3.961-.75 14.508-3.325 14.508-3.325s-3.109 2.867-4.97 4.559a3.12 3.12 0 0 1-1.178.696c-2.874.958-9.89 2.92-12.077 3.4-1.706.366-2.794-.304-3.23-2.23 0 0-2.992-12.701-4.074-17.02-.171-.66-.342-1.23-.55-1.878-.81-2.5-2.756-7.415-3.854-9.99a2.297 2.297 0 0 1-.187-.946c.032-2.942.576-9.506.576-9.506s6.457 6.038 9.581 8.218c.704.495 1.125.596 1.989.378 4.292-1.101 14.161-4.356 19.578-6.378a7.527 7.527 0 0 0 3.162-2.255c5.604-6.75 12.631-17.25 16.689-25.17.56-1.09.666-2.34.314-3.51l-.874-2.873c-.256-.84-1.146-1.787-1.967-2.101a738.105 738.105 0 0 0-25.924-9.32zm171.11-32.49l3.3 1.431a8.017 8.017 0 0 1 2.603 1.803c20.234 21.064 36.416 42.905 39.658 48.66.624 1.106 1.05 2.213 1.205 3.479 3.636 30.718.512 63.26-6.915 91.568-.672 2.554-1.424 3.862-3.887 5.708-7.93 5.949-19.766 15.435-31.538 25.106l-3.71 3.056c-14.18 11.71-27.651 23.175-33.368 28.45a21.468 21.468 0 0 0-3.71 4.494c-2.681 4.346-6.774 11.825-8.784 15.537l-.561 1.039-.637 1.185c-2.666-5.804-8.478-19.963-10.472-25.686-.65-1.867-.767-2.846-.08-5.346 3.253-11.867 18.624-46.367 21.616-52.606l.005 2.553c0 .372-.059.74-.176 1.09-1.35 4.08-9.614 31.271-11.293 43.064-.373 2.622-.341 3.33 0 5.904.736 5.505 4.036 15.601 4.036 15.601s1.957-4.074 3.78-6.83c.896-1.35 1.435-2 2.896-3.446 7.39-7.29 19.997-18.56 33.129-29.892l4.648-3.995c10.087-8.636 20.158-17.039 28.113-23.459 2.07-1.67 2.842-2.787 3.3-5.957 2.283-15.617 2.944-43.65 1.568-64.048-.26-3.851-1.514-7.574-3.69-10.771-4.99-7.357-10.956-14.32-20.004-23.26a8.935 8.935 0 0 1-2.5-4.708c-2.64-14.043-8.532-39.724-8.532-39.724zM214.453 228.87s1.839 5.94 3.612 12.392l.62 2.29c1.12 4.203 2.12 8.353 2.48 10.978.347 2.526.289 3.207-.612 5.627-2.185 5.798-6.206 15.123-10.495 24.656l-1.85 4.088c-5.263 11.566-10.591 22.739-13.179 27.575-1.274 2.383-2.474 3.937-4.873 6.367-5.476 5.559-15.958 16.064-22.447 21.942-2.357 2.138-2.991 3.963-3.471 6.729-.773 4.441-1.541 12.02-1.754 15.936-.187 3.441.373 5.053 2.298 8.462 11.436 20.346 49.618 67.154 60.495 76.984.789.713 1.365 1.192 3.028 2.293 1.6 1.064 6.814 4.436 6.814 4.436.208.143.384.335.518.553l1.887 3.314-.495-.245-.815-.404-2.518-1.252-2.424-1.21c-3.716-1.86-8.145-4.096-10.474-5.347a16.193 16.193 0 0 1-2.698-1.819c-12.738-10.553-51.772-56.111-63.252-75.132-2.863-4.75-3.156-6.288-2.772-10.782.72-8.367 1.834-18.889 2.81-23.5.592-2.782 1.205-4.415 3.343-6.873 7.185-8.248 15.948-19.138 24.488-30.312l3.002-3.951c12.942-17.142 24.864-34.3 29.315-43.04 1.019-1.989 1.104-2.68 1.125-4.558.059-5.447-1.685-16.053-2.143-18.734-.07-.42-.09-.846-.054-1.271z"/><path fill="currentColor"  d="M249.35 296.29s1.472 8.708 1.92 11.234c.25 1.431.303 1.814-.06 3.218-1.175 4.516-6.608 28.316-10.957 52.68l-.677 3.85c-1.777 10.26-3.312 20.447-4.206 29.162-.507 4.952-.341 6.138.97 10.531 3.717 12.415 17.462 44.851 20.101 50.766.294.655.47 1.34.555 2.048l.992 7.649c-4.404-6.633-28.334-50.5-37.734-74.792-1.109-2.862-1.322-4.272-.096-9.532 6.537-27.91 24.223-75.335 29.192-86.814z"/></svg>
    </div>
  );
};

export const SeatLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 730 580"
      >
        <path
          fill="currentColor"
          d="M293.01 1.12c80.02-2.82 160.12-.02 240 5.11 8.41.73 16.93.67 25.21 2.44 4.48 1.08 9.32 2.79 11.94 6.86 2.39 4.43 2.44 9.6 3.06 14.48 1.9 23.97 2.46 48.04 4.25 72.01-3.46.42-6.92-.11-10.38-.22-61.61-3.19-123.27-5.84-184.98-5.92-31.96.09-63.96-.22-95.89 1.33-7.74 1.14-16.5 3.73-20.97 10.63 24.16 4.29 48.27 8.92 72.42 13.29 80.04 14.98 160.14 29.63 240.18 44.59-.07 15.18-.04 30.36-.01 45.54-45.01-7.45-89.94-15.49-134.92-23.18-96.77-16.68-193.51-33.59-290.31-50.11.19-16.85.91-33.69 1.26-50.55.61-13.35.23-26.88 3.25-39.99 2.03-9.25 5.79-18.55 12.8-25.16 12.1-11.98 29.6-15.35 45.89-17.04 25.67-2.38 51.45-3.16 77.2-4.11zM152.15 160.14c138.64 25.58 277.23 51.59 415.85 77.32 3.03.74 6.27.8 9.18 1.91l.35.8c-.76 22.74-1.2 45.5-2.02 68.24-.53 14.03-2.01 28.71-9.23 41.07-7.74 12.78-22.16 19.85-36.43 22.52-21.03 3.95-42.51 4.21-63.81 5.38-91.65 4.16-183.49 1.86-274.99-4.44-7.31-.51-14.75-.64-21.85-2.67-3.68-1.16-7.48-3.03-9.56-6.43-2.23-4.46-2.37-9.55-2.92-14.41-1.96-26.53-3-53.11-4.39-79.67 47.2 3 94.48 4.68 141.77 5.73 45.66.74 91.32.73 136.98 1.18 9.85.41 20.5-1.47 27.97-8.39 1.09-1.25 2.86-2.41 2.68-4.28-20.58-3.09-41.04-6.93-61.58-10.31-82.64-14.13-165.32-28.13-247.95-42.34-.1-17.07.02-34.14-.05-51.21zM519.919 499.194v31.61H419.377V521.9c0-13.802 2.22-22.929 18.422-22.929h82.12zm-88.335-19.59c-26.412 0-38.619 14.024-38.619 36.73V580h26.412v-29.384h100.542v29.161h26.411V479.604Zm147.373 0v19.59h62.145v80.583h26.411v-80.583h62.145v-19.59zm-355.559 61.662c0 14.025 2.885 19.145 18.422 19.145h110.307V580H235.605c-26.412 0-38.84-12.02-38.84-34.504v-65.892h155.14v19.59H223.176v19.589h123.402v19.256H223.176v3.339zM34.299 514.554c-8.212-.668-9.543-3.562-9.543-8.46 0-4.452 2.441-7.123 8.656-7.123H155.26v-19.367H30.304c-17.755 0-29.962 6.901-29.962 26.713s9.1 26.713 29.518 28.494l98.767 8.236c7.546.668 9.765 3.117 9.765 8.682 0 5.12-2.22 8.459-9.1 8.459H5.225v19.59H131.29c21.75 0 31.295-8.682 31.295-29.162 0-18.7-8.656-26.268-29.741-28.049z"
        />
      </svg>
    </div>
  );
};

export const AbarthLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192.756 192.756"><g clipRule="evenodd"><path fill="#fff" fillOpacity="0" d="M0 0h192.756v192.756H0V0z"/><path d="M57.88 159.508l-8.428-15.127 32.89-19.059L72.106 115.1l-38.305 31.266 30.885 30.133 48.096-3.842-32.954-14.383 17.805-10.523-32.266-2.984-7.487 14.741zm79.739-54.59l-13.945 28.254 17.236-10.174-4.926 38.137 27.863-39.725-11.539-42.319-45.109 16.395 4.107 14.125 33.354-18.684 8.033 14.623-15.074-.632zM74.882 60.783l-15.161 9.068 1.952 7.281-19.553 2.919 1.264 3.475L62.7 81.63l1.561 3.747-19.162 2.707 1.296 3.68 19.014-2.281L67.01 93.3l-18.842 2.908 1.623 3.802 18.597-2.492L70 101.627l-18.493 2.84 1.678 3.869 18.087-2.242 1.905 3.312 12.749-10.123 16.572-6.387-1.535-2.345 12.045-16.653-2.828-3.1-11.885 16.116-2.345-2.344 12.126-16.734-3.152-2.991-11.965 15.521-2.91-2.991 12.207-16.33-2.99-2.911-12.375 15.283-2.392-2.347 11.613-16.574-2.722-2.833-11.829 16.172-6.679-7.052zM88.919 102L75.49 112.641l12.258 12.949 8.815-7.785 12.261-4.041-4.963-17.059L88.919 102zm33.401-65.16l7.906 24.689 4.205-32.417-12.111 7.728zm-59.919 5.125L77.052 43.9l7.823-12.363-7.033-9.216-15.441 19.644zm12.45 16.007l1.212-11.884-14.632-1.213-1.94 21.585 15.36-8.488zm5.721-37.18l6.364 8.846 15.724-4.972 2.264-8.408-24.352 4.534zm24.594 3.226l14.229 11.803 2.91-2.749-14.924-15.711-2.215 6.657z" fill="currentColor"/></g></svg>
    </div>
  );
};

export const FordLogo = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes} ></div>
  );
};


export const aboutIcon = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
        <path strokeLinecap="round" strokeLinejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />
      </svg>

    </div>
  )
};

export const PhoneIcon = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" >
        <path fillRule="evenodd" d="M1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5z" clipRule="evenodd" />
      </svg>

    </div>
  )
};

export const StackIcon = (props: Props) => {
  const classes = cn("", props.className);

  return (
    <div {...props} className={classes}>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
        <path d="M11.644 1.59a.75.75 0 01.712 0l9.75 5.25a.75.75 0 010 1.32l-9.75 5.25a.75.75 0 01-.712 0l-9.75-5.25a.75.75 0 010-1.32l9.75-5.25z" />
        <path d="M3.265 10.602l7.668 4.129a2.25 2.25 0 002.134 0l7.668-4.13 1.37.739a.75.75 0 010 1.32l-9.75 5.25a.75.75 0 01-.71 0l-9.75-5.25a.75.75 0 010-1.32l1.37-.738z" />
        <path d="M10.933 19.231l-7.668-4.13-1.37.739a.75.75 0 000 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 000-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 01-2.134-.001z" />
      </svg>
    </div>
  )
};

export const StarIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg viewBox="0 0 20 20" aria-hidden="true" {...props}>
      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
    </svg>
  )
}

export const CircleIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg
    strokeWidth={1}

    viewBox="0 0 558 558"
    fill="none"
    aria-hidden="true"
    className="animate-spin-slower"
    {...props}
  >
    <defs>
      <linearGradient
        id="a"
        x1={79}
        x2={105}
        y1={16}
        y2={237}
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="hsl(100, 32%, 91%)" />
        <stop offset={1} stopColor="#fff" stopOpacity={0} />
      </linearGradient>
    </defs>
    <path
      stroke="#fff"
      d="M1 279C1 125.465 125.465 1 279 1s278 124.465 278 278-124.465 278-278 278S1 432.535 1 279Z"
      opacity={0.2}
    />
    <path
      stroke="url(#a)"
      strokeLinecap="round"
      d="M1 279C1 125.465 125.465 1 279 1"
    />
  </svg>
  )
}



